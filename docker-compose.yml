version: '3.8'

# Environment variables from .env file are automatically loaded
# Make sure to set all required variables in the .env file

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: betrack-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PORT=${PORT:-5000}
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${DATABASE_NAME:-BeTrack}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redispass}@redis:6379/0
      - NODE_ENV=development
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-5000}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - betrack-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=${DATABASE_NAME:-BeTrack}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - betrack-network

  mongo-express:
    image: mongo-express:1.0
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-admin123}
    depends_on:
      - mongo
    networks:
      - betrack-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispass}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redispass}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - betrack-network

  # Redis Commander - Web UI for Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379:0
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin123}
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - betrack-network

networks:
  betrack-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
